{"version":3,"sources":["scripts/main.js"],"names":["list","document","querySelectorAll","mainList","querySelector","toNum","str","slice","split","join","sortList","someList","sort","a","b","dataset","salary","reverse","getEmployees","arr","li","obj","names","textContent","trim","position","age","push","sorted","innerHTML","map"],"mappings":";AAAA,aAiCA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA/BA,IAAMA,EAAOC,SAASC,iBAAiB,MACjCC,EAAWF,SAASG,cAAc,MAExC,SAASC,EAAMC,GACN,OAACA,EAAIC,MAAM,GAAGC,MAAM,KAAKC,KAAK,IAGvC,SAASC,EAASC,GACT,OAAA,EAAIA,GAAUC,KAAK,SAACC,EAAGC,GAC5BT,OAAAA,EAAMQ,EAAEE,QAAQC,QAAUX,EAAMS,EAAEC,QAAQC,UAASC,UAGvD,SAASC,EAAaP,GACdQ,IADwB,EACxBA,EAAM,GAEKR,EAAAA,EAAAA,GAHa,IAGH,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAhBS,IAAAA,EAAgB,EAAA,MACnBC,EAAM,CACVC,MAAOF,EAAGG,YAAYC,OACtBC,SAAUL,EAAGL,QAAQU,SACrBT,OAAQI,EAAGL,QAAQC,OACnBU,IAAKN,EAAGL,QAAQW,KAGlBP,EAAIQ,KAAKN,IAXmB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAcvBF,OAAAA,EAGT,IAAMS,EAASV,EAAaR,EAASV,IAErCG,EAAS0B,UAAeD,GAAAA,OAAAA,EAAOE,IAAI,SAAA,GAAGR,IAAAA,EAAAA,EAAAA,MAAOG,EAAAA,EAAAA,SAAUT,EAAAA,EAAAA,OAAQU,EAAAA,EAAAA,IAE1CD,MAAAA,6BAAAA,OAAAA,EACFT,wBAAAA,OAAAA,EACHU,qBAAAA,OAAAA,EAEdJ,YAAAA,OAAAA,EANiC,QAOhCb,KAAK,IAPR","file":"main.67d6c1b2.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst list = document.querySelectorAll('li');\nconst mainList = document.querySelector('ul');\n\nfunction toNum(str) {\n  return +str.slice(1).split(',').join('');\n}\n\nfunction sortList(someList) {\n  return [...someList].sort((a, b) =>\n    toNum(a.dataset.salary) - toNum(b.dataset.salary)).reverse();\n}\n\nfunction getEmployees(someList) {\n  const arr = [];\n\n  for (const li of someList) {\n    const obj = {\n      names: li.textContent.trim(),\n      position: li.dataset.position,\n      salary: li.dataset.salary,\n      age: li.dataset.age,\n    };\n\n    arr.push(obj);\n  }\n\n  return arr;\n}\n\nconst sorted = getEmployees(sortList(list));\n\nmainList.innerHTML = `${sorted.map(({ names, position, salary, age }) => `\n<li\n    data-position=\"${position}\"\n    data-salary=\"${salary}\"\n    data-age=\"${age}\"\n  >\n${names}\n`).join('')}\n`;\n"]}